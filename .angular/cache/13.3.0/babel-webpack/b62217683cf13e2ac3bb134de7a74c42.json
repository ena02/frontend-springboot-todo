{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SettingsDialogComponent = // диалоговое окно настроек приложения\n// т.к. настройки не привязаны к другим компонентам (окнам),\n// то он самостоятельно может загружать нужные данные с помощью dataHandler (а не получать их с помощью @Input)\nclass SettingsDialogComponent {\n  constructor(dialogRef, // для возможности работы с текущим диалог. окном\n  dataHandler // ссылка на сервис для работы с данными\n  ) {\n    this.dialogRef = dialogRef;\n    this.dataHandler = dataHandler;\n  }\n\n  ngOnInit() {\n    // получаем все значения, чтобы отобразить настроку цветов\n    this.dataHandler.getAllPriorities().subscribe(priorities => this.priorities = priorities);\n  } // нажали Закрыть\n\n\n  onClose() {\n    this.dialogRef.close(false);\n  } // т.к. мы меняем значения в массивах, то изменения сразу отражаются на списке задач (не требуется доп. обновления)\n  // добавили приоритет\n\n\n  onAddPriority(priority) {\n    this.dataHandler.addPriority(priority).subscribe();\n  } // удалили приоритет\n\n\n  onDeletePriority(priority) {\n    this.dataHandler.deletePriority(priority.id).subscribe();\n  } // обновили приоритет\n\n\n  onUpdatePriority(priority) {\n    this.dataHandler.updatePriority(priority).subscribe();\n  }\n\n};\nSettingsDialogComponent = __decorate([Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.css']\n}) // диалоговое окно настроек приложения\n// т.к. настройки не привязаны к другим компонентам (окнам),\n// то он самостоятельно может загружать нужные данные с помощью dataHandler (а не получать их с помощью @Input)\n], SettingsDialogComponent);\nexport { SettingsDialogComponent };","map":null,"metadata":{},"sourceType":"module"}