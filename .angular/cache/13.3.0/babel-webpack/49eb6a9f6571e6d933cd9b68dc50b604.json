{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EditCategoryDialogComponent } from \"../../dialog/edit-category-dialog/edit-category-dialog.component\";\nimport { OperType } from \"../../dialog/OperType\";\nlet CategoriesComponent = class CategoriesComponent {\n  constructor(dataHandler, dialog, // внедряем MatDialog, чтобы работать с диалоговыми окнами\n  deviceService // для определения типа устройства\n  ) {\n    this.dataHandler = dataHandler;\n    this.dialog = dialog;\n    this.deviceService = deviceService; // выбрали категорию из списка\n\n    this.selectCategory = new EventEmitter(); // удалили категорию\n\n    this.deleteCategory = new EventEmitter(); // изменили категорию\n\n    this.updateCategory = new EventEmitter(); // добавили категорию\n\n    this.addCategory = new EventEmitter(); // передаем только название новой категории\n    // поиск категории\n\n    this.searchCategory = new EventEmitter(); // передаем строку для поиска\n\n    this.isMobile = deviceService.isMobile();\n    this.isTablet = deviceService.isTablet();\n  } // категории с кол-вом активных задач для каждой из них\n\n\n  set setCategoryMap(categoryMap) {\n    this.categoryMap = categoryMap;\n  } // метод вызывается автоматически после инициализации компонента\n\n\n  ngOnInit() {// this.dataHandler.getAllCategories().subscribe(categories => this.categories = categories);\n  }\n\n  showTasksByCategory(category) {\n    // если не изменилось значение, ничего не делать (чтобы лишний раз не делать запрос данных)\n    if (this.selectedCategory === category) {\n      return;\n    }\n\n    this.selectedCategory = category; // сохраняем выбранную категорию\n    // вызываем внешний обработчик и передаем туда выбранную категорию\n\n    this.selectCategory.emit(this.selectedCategory);\n  } // сохраняет индекс записи категории, над который в данный момент проходит мышка (и там отображается иконка редактирования)\n\n\n  showEditIcon(index) {\n    this.indexMouseMove = index;\n  } // диалоговое окно для редактирования категории\n\n\n  openEditDialog(category) {\n    const dialogRef = this.dialog.open(EditCategoryDialogComponent, {\n      data: [category.title, 'Редактирование категории', OperType.EDIT],\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'delete') {\n        // нажали удалить\n        this.deleteCategory.emit(category); // вызываем внешний обработчик\n\n        return;\n      }\n\n      if (result) {\n        // нажали сохранить\n        category.title = result;\n        this.updateCategory.emit(category); // вызываем внешний обработчик\n\n        return;\n      }\n    });\n  } // диалоговое окно для добавления категории\n\n\n  openAddDialog() {\n    const dialogRef = this.dialog.open(EditCategoryDialogComponent, {\n      data: ['', 'Добавление категории', OperType.ADD],\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.addCategory.emit(result); // вызываем внешний обработчик\n      }\n    });\n  } // поиск категории\n\n\n  search() {\n    if (this.searchCategoryTitle == null) {\n      return;\n    }\n\n    this.searchCategory.emit(this.searchCategoryTitle);\n  }\n\n};\n\n__decorate([Input()], CategoriesComponent.prototype, \"selectedCategory\", void 0);\n\n__decorate([Input()], CategoriesComponent.prototype, \"uncompletedTotal\", void 0);\n\n__decorate([Output()], CategoriesComponent.prototype, \"selectCategory\", void 0);\n\n__decorate([Output()], CategoriesComponent.prototype, \"deleteCategory\", void 0);\n\n__decorate([Output()], CategoriesComponent.prototype, \"updateCategory\", void 0);\n\n__decorate([Output()], CategoriesComponent.prototype, \"addCategory\", void 0);\n\n__decorate([Output()], CategoriesComponent.prototype, \"searchCategory\", void 0);\n\n__decorate([Input('categoryMap')], CategoriesComponent.prototype, \"setCategoryMap\", null);\n\nCategoriesComponent = __decorate([Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})], CategoriesComponent);\nexport { CategoriesComponent };","map":null,"metadata":{},"sourceType":"module"}